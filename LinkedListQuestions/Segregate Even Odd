/* LOGIC   ==========this logic is for better solution Not Optimal 
CREATE TWO LINKED LIST HAVING THERE POINTER NODE 
ADD THE EVEN AND ODD VALUES IN THESE TWO LINKED LIST 
THEN ATLAST PEHLE K LAST NODE K NEXT KO POINT KRWA DO DUSRE K HEAD NODE KI TARAF 
DUSRE K LAST NODE K NEXT KO NULL KRNA MAT BHULNA  
RETURN PEHLE K HEAD NODE KO */
/****************************************************************

 Following is the class structure of the Node class:

 class Node {
     public int data;
     public Node next;

     Node()
     {
         this.data = 0;
         this.next = null;
     }
     Node(int data)
     {
         this.data = data;
         this.next = null;
     }
     Node(int data, Node next)
     {
         this.data = data;
         this.next = next;
     }
 }

 *****************************************************************/

public class Solution
{
    public static Node segregateEvenOdd(Node head)
    {
        if(head==null||head.next==null){
            return head;
        }
        Node even=new Node(0);
        Node p1=even;
        Node odd=new Node(0);
        Node p2=odd;
        while(head!=null){
            if(head.data%2==0){
                p1.next=head;
                p1=p1.next;
            }else{
                p2.next=head;
                p2=p2.next;
            }
            head=head.next;
        }
        p1.next=odd.next;
        p2.next=null;
        return even.next;
    }
       
}
