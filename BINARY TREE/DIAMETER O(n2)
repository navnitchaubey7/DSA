// Diameter is the distance between two nodes of the BT
package binaryTree;
public class diameter{
    static class Node {
        int data;
        Node left;
        Node right;
        Node(int data){
            this.data=data;
            this.left=null;
            this.right=null;
        }
    }
    static class binaryTree{
        int i=-1;
        public Node add(int arr[]){
            i++;
            if(arr[i]==-1){
                return null;
            }
            Node newNode=new Node(arr[i]);
            newNode.left=add(arr);
            newNode.right=add(arr);
            return newNode ;
        }
    }
    public static int height(Node root){
        if(root==null){
            return 0;
        }
        int left=height(root.left);
        int right=height(root.right);
        return Math.max(left, right)+1;
    }
    public static int diameter(Node root){
        if(root==null){
            return 0;
        }
        int diameter1=diameter(root.left);
        int diameter2=diameter(root.right);
        int diameter3 =height(root.left)+height(root.right)+1;
        return Math.max(diameter3,Math.max(diameter2, diameter1));
    }
    public static void main(String[] args) {
        int[] arr = { 1, 2, 3, -1, -1, 5, -1, -1, 3, -1, 6, -1, -1 };
        binaryTree tree = new binaryTree();
        Node root=tree.add(arr);
        System.out.println(root.data);
        int heightResult=height(root);
        System.out.println(heightResult);
        int dia=diameter(root);
        System.out.println(dia);
    }
}
