package binaryTree;

public class subTreee {
    static class Node {
        int data;
        Node left;
        Node right;

        Node(int data) {
            this.data = data;
            this.left = null;
            this.right = null;
        }
    }

    static class binaryTree {
        int i = -1;

        public Node add(int arr[]) {
            i++;
            if (arr[i] == -1) {
                return null;
            }
            Node newNode = new Node(arr[i]);
            newNode.left = add(arr);
            newNode.right = add(arr);
            return newNode;
        }
    }

    static class binaryTreee {
        int j = -1;

        public Node addd(int arr[]) {
            j++;
            if (arr[j] == -1) {
                return null;
            }
            Node newNode = new Node(arr[j]);
            newNode.left = addd(arr);
            newNode.right = addd(arr);
            return newNode;
        }
    }

    public static boolean isSimilar(Node root, Node subroot) {
        if (root == null && subroot == null) {
            return true;
        }
        if (subroot == null || root == null) {
            return false;
        }
        if (root.data == subroot.data) {
            return isSimilar(root.left, subroot.left) && isSimilar(root.right, subroot.right);
        }
        return false;
    }

    public static boolean isSubtree(Node root, Node subroot) {
        if (subroot == null) {
            return true;
        }
        if (root == null) {
            return false;
        }
        if (root.data == subroot.data) {
            if (isSimilar(root, subroot)) {
                return true;
            }
        }
        return isSubtree(root.left, subroot) || isSubtree(root.right, subroot);
    }

    public static void main(String args[]) {
        int[] arr = { 1, 2, 3, -1, -1, 5, -1, -1, 3, -1, 6, -1, -1 };
        int ar[] = { 1, 2, 3, -1, -1, 5, -1, -1, 3, -1, -1 };

        binaryTree tree = new binaryTree();
        Node root = tree.add(arr);
        binaryTreee tree2 = new binaryTreee();
        Node root2 = tree2.addd(ar);
        boolean result = isSubtree(root, root2);
        System.out.println(result);
    }
}
