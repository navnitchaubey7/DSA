package queueDataStructure;

import java.util.Queue;

public class queuy {
    static class queue{
        static int arr[];
        static int size ;
        static int rear=-1;
        queue(int n){
            arr=new int[n];
            this.size=n;
        }
        public  boolean isEmpty(){
            return rear==-1;
        }
        // ------------------------------------------------------------------ENQUEUE
        public void add(int data){
            if(rear==size-1){
                System.out.println("queue is Full");
                return;
            }
            rear++;
            arr[rear]=data;
        }
        //------------------------------------------------------------------DEQUEUE
        public  int remove(){
            if(isEmpty()){
                return -1;
            }
            int front=arr[0];
            for(int i=0;i<rear;i++){
                arr[i]=arr[i+1];
            }
            rear--;
            return front;

        }
        //------------------------------------------------------------------PEEK
        public  int peek(){
              if(isEmpty()){
                return -1;
            }
            return arr[0];
            

        }
    }
    public static void main(String[] args) {
        
        queue q=new queue(3);
        q.add(1);
        q.add(2);
        q.add(3);
        while(!q.isEmpty()){
            System.out.println(q.peek());
            q.remove();
        }

    }
    
}
