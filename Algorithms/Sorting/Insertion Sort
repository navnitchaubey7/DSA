package Algorithms;
// To sort an array of size N in ascending order iterate over the array and compare the current element (key) to its predecessor, if the key element is smaller than its predecessor, compare it to the elements before. Move the greater elements one position up to make space for the swapped element.
// time complexicity bestON AVERAGE AND WORST =O(n2)
// SPACE COMPLEXICITY=0(1)
public class insertionSort {
    public static void sort(int arr[]){
        for(int i=1;i<arr.length;i++){
            int key=arr[i];
            int j=i-1;
            while(j>=0&&arr[j]>key){
                arr[j+1]=arr[j];
                j=j-1;
            }
            arr[j+1]=key;
        }
    }
    public static void main(String args[]){
        int arr[]={1,5,4,7,4,2,5,6};
        sort(arr);
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]);
        }

    }
}
