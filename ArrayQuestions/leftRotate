package day3;
public class leftRotate{

    //   ----------THIS METHOD LEFT ROTATE THE ARRAY BY ONE 


    static int[] rotateArray(int[] arr, int n) {
        int temp=arr[0];
        for(int i=0;i<n-1;i++){
            arr[i]=arr[i+1];
        }
        arr[(arr.length)-1]=temp;
        return arr;

    }

    // ----------THIS METHOD LEFT ROTATE THE ARRAY BY D INDEX
    public static int[] rotate(int[] arr,int n,int d){
        d=d%n;
        //--------STORE FIRST D ELEMENTS IN TEMPORARY ARRAY
        int temp[]=new int[d];
        for(int i=0;i<d;i++){
            temp[i]=arr[i];
        }
        // --------shift THE REMAINING ELEMENTS TO THE RIGHT 
        for(int i=d;i<n;i++){
            arr[i-d]=arr[i];
        }
        // this copy the temp to last
        
        for(int i=(n-d);i<n;i++){
            arr[i]=temp[i-(n-d)];
        }
        return arr;
    }

    public static void main(String[] args) {
        int [] arr={1,2,3,4,5,6,7,8,9};
        int n=arr.length;
        for(int i=0;i<n;i++){
        System.out.print(arr[i]);
        }
        System.out.println();
        int [] result=rotateArray(arr, n);
        for(int i=0;i<n;i++){
        System.out.print(result[i]);
        }
        System.out.println();
        int dresult[]=rotate(arr, n, 3);
        for(int i=0;i<n;i++){
        System.out.print(dresult[i]);
        }
    }
}
/* ----CODING NINJAS 
import java.util.ArrayList;

public class Solution {
	public static ArrayList<Integer> rotateArray(ArrayList<Integer> arr, int k) {
        int n=arr.size();
      int temp[]=new int[k];
      for(int i=0;i<k;i++){
          temp[i]=arr.get(i);
      }
      for(int i=k;i<n;i++){
          arr.set(i-k,arr.get(i));
      }
      for(int i=n-k;i<n;i++){
          arr.set(i, temp[i-(n-k)]);
      }
      return arr;
    }
}
*/
